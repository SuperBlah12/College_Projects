<?xml version="1.0"?>
<project name="Assign6" default="targets">
   <taskdef resource="cpptasks.tasks"/>
   <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
   <property name="src.dir" value="src"/>
   <property name="dist.dir" value="bin"/>
   <property name="lib.dir" value="lib"/>
   <property name="classes.dir" value="classes"/>
   <property name="obj.dir" value="obj"/>
   <property name="host.name" value="192.168.1.127"/>
   <property name="mediaport.num" value="8080"/>
   <property name="downport.num" value="3030"/>
   <property environment="env"/>
   <property name="ostype" value="${env.OSTYPE}"/>

   <target name="targets">
      <echo message="Targets are clean, prepare, build.all, generate.stub, build.client, build.downserver, build.downclient, build.mediaclient, execute.downserver, execute.client"/>
      <echo message="base directory is: ${basedir}"/>
      <echo message="execute media server with: ./bin/MediaServer ${port.num}"/>
   </target>

   <path id="compile.classpath">
      <pathelement location="${classes.dir}"/>
      <fileset dir="./lib">
         <include name="mediaGui.jar"/>
         <include name="json.jar"/>
         <include name="media.jar"/>
      </fileset>
      <pathelement location="${build}"/>
      <pathelement path="${lib}/json.jar"/>
   </path>

   <target name="clean">
      <delete dir="${classes.dir}" failonerror="false"/>
      <delete dir="${dist.dir}" failonerror="false"/>
      <delete dir="${obj.dir}" failonerror="false"/>
      <delete dir="DataClient" failonerror="false"/>
      <delete file="${src.dir}/cpp/mserver/mediaserverstub.h"
              failonerror="false"/>
   </target>

   <target name="prepare">
      <mkdir dir="${classes.dir}"/>
      <mkdir dir="${dist.dir}" />
      <mkdir dir="${obj.dir}/client" />
      <mkdir dir="${obj.dir}/server" />
      <mkdir dir="DataClient"/>
      <mkdir dir="DataServer"/>
      <echo message="host name is: ${os.name}"/>
      <echo message="host arch is: ${os.arch}"/>
      <echo message="host version is: ${os.version}"/>
      <echo message="base directory is: ${basedir}"/>
      <echo message="detected a linux host"/>
      <property name="json.file.name" value="mediaRPCMethods.json"/>
      <property name="includepath" value="/usr/local/include"/>
      <property name="media.lib.path" value="/usr/local/lib"/>
      <property name="media.lib.list" value="jsoncpp,jsonrpccpp-server,jsonrpccpp-common,microhttpd,stdc++"/>
   </target>

   <target name="build.all"
           depends="clean,prepare,build.client,build.downserver,build.mediaserver"
           description="Clean then build java client"/>

   <target name="generate.stub" depends="prepare"
           description="Create stubs fro Media Server/Client">
      <exec dir="${basedir}" executable="jsonrpcstub">
         <arg line="${json.file.name} --cpp-server=mediaserverstub"/>
      </exec>
      <copy file="mediaserverstub.h"
            tofile="${src.dir}/cpp/mserver/mediaserverstub.h"/>
      <delete file="mediaserverstub.h"/>
   </target>

   <target name="build.client" depends="build.downclient"
          description="Compile GUI Client"> 
     <!-- Compile Java classes as necessary -->
     <javac srcdir="${src.dir}/java/controller"
            destdir="${classes.dir}"
            includeantruntime="false">
        <classpath refid="compile.classpath"/>
    </javac>
  </target>

   <target name="build.downserver" depends="prepare"
           description="Compile Download Server">
      <javac srcdir="${src.dir}/java/dserver"
             includeantruntime="false"
             destdir="${classes.dir}">
         <filename name="DownloadServer.java"/>
         <classpath refid="compile.classpath"/>
      </javac>
   </target>

   <target name="build.downclient" depends="prepare"
           description="Compile Download Server">
      <javac srcdir="${src.dir}/java/dserver"
             includeantruntime="false"
             destdir="${classes.dir}">
         <filename name="DownloadClient.java"/>
         <classpath refid="compile.classpath"/>
      </javac>
   </target>

   <target name="build.mediaserver" depends="generate.stub"
           description="Compile Media Server">
      <cc outtype="executable" subsystem="console"
         outfile="${dist.dir}/MediaServer"
         objdir="${obj.dir}/server">
        <compiler name="g++"/>
         <includepath>
            <pathelement path="/usr/include/jsoncpp"/>
         </includepath>
         <libset dir="${media.lib.path}" libs="${media.lib.list}"/>
         <fileset dir="${src.dir}/cpp/mserver/server"
                  includes="*.cpp"/>
      </cc>
   </target>

   <target name="execute.client" depends="build.client"
           description="Start program">
         <echo message="command line execute: java -cp classes:lib/mediaGui.jar ser321.media.SampleMediaClient" />
         <java classname="ser321.media.MediaClientController" fork="yes">
           <classpath refid="compile.classpath"/>
           <arg value="Tyler Cole"/>
           <arg value="${host.name}"/>
           <arg value="${mediaport.num}"/>
           <arg value="${downport.num}"/>
         </java>
   </target>

   <target name="execute.downserver" depends="build.downserver"
           description="Start Download Server">
      <java classname="ser321.media.download.DownloadServer" fork="yes">
         <classpath refid="compile.classpath"/>
         <arg value="${downport.num}"/>
      </java>
   </target>

</project>
